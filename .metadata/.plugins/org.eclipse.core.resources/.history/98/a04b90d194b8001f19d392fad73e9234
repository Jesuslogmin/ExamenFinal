package com.academia.validator;

import com.barturen.entity.AluAsistencia;
import com.barturen.exception.ValidateException;

public class AluAsistenciaValidator {

    public static void validate(AluAsistencia asistencia) {
        if (asistencia.getAlumno_id() <= 0) {
            throw new ValidateException("Debe de haber un alumno registrado.");
        }

        if (asistencia.getEstado() == null || asistencia.getEstado().trim().isEmpty()) {
            throw new ValidateException("El estado de la asistencia es requerido.");
        }
        if (!asistencia.getEstado().matches("^(A|F|FJ)$")) {
            throw new ValidateException("El estado de la asistencia debe ser 'A', 'F' o 'FJ'.");
        }
        if (asistencia.getCreatedAt() != null && asistencia.getCreatedAt().after(new java.util.Date())) {
            throw new ValidateException("La fecha de creación no puede ser en el futuro.");
        }
        if (asistencia.getUpdatedAt() != null && asistencia.getUpdatedAt().after(new java.util.Date())) {
            throw new ValidateException("La fecha de actualización no puede ser en el futuro.");
        }
    }
}
